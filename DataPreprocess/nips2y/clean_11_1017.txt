abstract reinforc learn method use improv perform local search algorithm combinatori optim learn evalu function predict outcom search evalu function therefor abl guid search low cost solut better origin cost function describ reinforc learn method enhanc local search combin aspect previou work zhang dietterich boyan moor boyan line learn phase valu function learn use guid search multipl problem size instanc illustr techniqu develop sever function dial ride problem learn enhanc local search algorithm exhibit improv standard local search algorithm introduct combinatori optim great import comput scienc engin oper research investig use reinforc learn rl enhanc tradit local search optim hillclimb sinc local search sequenti decis process rl use improv search perform learn evalu function predict outcom search therefor abl guid search low cost solut better origin cost function three approach use rl improv combinatori optim describ moll barto perkin sutton literatur one learn valu function multipl search trajectori singl problem instanc valu function improv predict accuraci guidanc enhanc addit search trajectori instanc boyan moor stage algorithm boyan moor boyan fall categori show excel perform rang optim problem anoth approach learn valu function line use multipl new instanc problem zhang dietterich applic rl nasa space shuttl mission schedul problem take approach although strictli involv local search defin key issu need normal state represent reward trajectori instanc differ size difficulti yield consist train data approach state rl problem entir solut complet tour travel salesman problem tsp action select next solut current solut neighborhood third approach describ bertseka tsitsikli use learn valu function guid direct construct solut rather move focus combin aspect first two approach goal care examin well td algorithm learn instanc independ valu function given problem produc enhanc local search algorithm applic instanc problem approach combin line learn phase stage altern use learn valu function origin cost function guid search present extend case studi algorithm applic somewhat complic variant tsp known dial ride problem exhibit non uniibrm structur present real world transport logist problem enhanc local search compon local search combinatori optim finit set feasibl solut object cost function neighborhood function power set local search start initi feasibl solut problem instanc step select solut sk sk su sk process continu local improv imposs current local optimum return algorithm alway move first less expens neighbor solut encount enumer neighborhood call first improv local search follow zhang dietterich boyan moor note local search view polici markov decis process mdp state set action set action identifi neighbor solut select local search select action decreas valu eventu absorb state local minimum cost optim valu function local search problem whose objecti reach lowest cost absorb state possibl includ tradeoff involv number search step requir rl use function approxim learn approxim optim valu function therebi produc enhanc search algorithm local guid instead one way give small penalti transit termin reward upon absorpt invers relat cost termin state maxim expect undiscount return accomplish desir tradeoff determin valu qualiti final solut search time cf zhang dietterich sinc instanc optim problem correspond differ mdp valu learn instanc independ valu function enhanc local search function learn way instanc specif wherea boyan stage algorithm effect use enhanc addit search start differ state instanc interest learn line use arbitrari instanc given problem case relev sequenti decis problem complic singl instanc mdp sinc summari aspect problem instanc would extrem difficult make structur process explicit fortun rl requir gener sampl trajectori rel easi case addit cost secondari characterist feasibl solut provid valuabl inform search algorithm adjust paramet function approxim system whose input featur vector describ feasibl solut rl algorithm produc compact represent approach oper two distinct phase learn phase learn valu function appli td algorithm number randomli chosen instanc problem perform phase use result valu function held fix guid local search addit problem instanc approach principl applic combinatori optim problem describ detail context dial ride problem dial ride problem dial ride problem darp follow formul van park termin driver receiv call custom need ride call identifi locat custom well custom destin call receiv van must rout start termin visit pick drop site order return termin tour must pick passeng eventu drop passeng tour minim length fail goal darp np complet unlik optim darp tour found easili least good qualiti tour construct assum van unlimit capac distanc pick drop locat repres symmetr euclidean distanc matrix use notat denot follow tour start termin pick drop thu pick drop drop return termin site given tour opt neighborhood set legal tour obtain subsequ revers exampl tour new tour creat follow subsequ revers element howev revers lead infeas tour sinc assert passeng drop first pick neighborhood structur darp highli non uniform vari neighborhood size let feasibl darp tour opt mean tour obtain first improv local search use neighborhood structur present fix standard enumer tour length cost function tsp opt algorithm moll barto perkin sutton darp opt neighborhood defin search fix systemat way first improv style neighborhood creat insert three rather two break tour opt much slower opt time slow much effect even opt given equal time gener multipl random start tour complet improv scheme psarafti first studi opt opt algorithm darp studi tour size report size opt tour shorter averag opt tour theoret studi darp stein show site place unit squar global optim tour problem size length asymptot approach probabl increas bound appli studi although multipli posit coordin truncat get integ distanc matric thu exampl valu give us baselin estim global optim tour cost heali moll consid use secondari cost function extend local search darp addit primari cost tour length consid secondari cost ratio tour cost neighborhood size call cost hood algorithm employ stage like altern two cost function start random tour first found opt perform limit local search use cost hood function effect drive search new tour decent cost larg neighborhood altern process repeat time bound exhaust point least cost tour seen far report result search techniqu work well effect fall midway opt opt enhanc opt darp restrict descript learn method enhanc opt darp method use problem learn phase initi function approxim conduct number train episod satisfi weight stabil episod select problem size random predetermin rang gener random darp instanc size gener symmetr euclidean distanc matrix gener random point plane insid squar bound point set termin site point initi tour randomli gener feasibl tour conduct modifi first improv opt local search use negat current valu function vk cost function modif termin control paramet follow search termin tour vk word step taken produc improv least accord current valu function episod return final tour sf run one unmodifi opt local search time use darp cost function tour length sl comput opt appli batch version undiscount td save search trajectori use follow immedi reward transit opt sf steiniv termin reward steiniv stein estim instanc size normal steiniv help make termin reward consist across instanc size end learn phase final valu function use perform phase consist appli modifi first improv opt local search cost function new instanc follow opt applic result tour result describ obtain use simpl linear approxim bia learn instanc independ valu function enhanc local search tabl weight vector learn valu function valu function weight vector weight featur develop follow base featur normcostn steinn rzormhoodn aiv normal coeffici defin normpro consid list least expens edg distanc matrix follow let one edg endpoint rzormproscn featur examin current tour count number site tour appear orrn ro cn sum count edg proxim list divid normal coeffici bn describ function approxim give wo ormcostn rzormhoodn wi ormproxn normhoodn coeffici bn result run linear regress randomli sampl instanc random size determin coeffici yield closest fit constant target valu normal neighborhood size proxim result bn motiv quotient featur come heali moll found use similar term improv opt darp allow sacrific cost improv gain larg neighborhood experiment result comparison among algorithm done five repres size learn phase conduct approxim learn episod one use randomli gener instanc size select randomli inclus result learn phase valu function assess influenc multi instanc learn also repeat learn phase time except held instanc size fix differ one repres size yield case distinct valu function vn train instanc size tabl show result weight vector bia weight costhoodn weight proxim weight except pro cimiti weight quit consist across train instanc size yet understand train multipl size instanc led pattern variat tabl compar tour qualiti found six differ local search algorithm algorithm use learn valu function result perform phase afler learn use algorithm list tabl entri percent tour length exceed steinn instanc size averag instanc repres size thu opt exceed stein instanc sampl set averag last row tabl give result use th five differ valu function vn correspond result td shown better moll barto perk ns sutton tabl comparison six algorithm size percentag ste averag random instanc size algorithm opt opt td td td td entri tabl averag rel run time time opt second entri give time divid opt time algorithm opt opt td td valu learn enhanc algorithm well opt run time ignor inde td percent better accord measur size note opt clearli produc best tour non zero td decreas tour qualiti expect sinc caus shorter search trajectori tabl give rel run time variou algorithm raw run time opt given second common lisp mhz mac five size first row subsequ row give approxim run time divid correspond opt run time time averag instanc algorithm use learn valu function slower mainli due necess evalu featur note td becom significantli faster non zero final tabl give rel perform seven algorithm normal time includ stage algorithm use linear regress featur gener random instanc repres size allow algorithm run indic amount time instanc time remain local optimum reach restat algorithm point except case opt select new random start tour restart regim learningenhanc algorithm regim employ stage algorithm report best result found allot time chart report averag valu across instanc notic algorithm take advantag extens line learn significantli outperfo rm algorithm includ stage reli singleinst learn discuss present extens local search use rl enhanc local search cost function particular optim problem method combin aspect work learn instanc independ valu function enhanc local search tabl perform comparison equal run time size run time algorithm sec sec sec sec sec opt stage td td zhang dietterich boyan moor boyan appli method rel pure optim problem darp possess rel consist structur across problem instanc allow method learn valu function appli across problem instanc size method yield signific improv tradit local search approach darp basi simpl linear approxim built use rel impoverish set featur also improv upon boyan moor stage algorithm exampl problem benefit extens line learn whose cost includ assess think appropri type problem sinc one time learn cost amort mani futur problem instanc practic import acknowledg thank justin boyan help discuss subject research support grant air forc offic scientif research boll afb afosr refer boyan learn evalu function global optim ph thesi carnegi mellon univers boyan moor use predict improv combinatori optim search proceed ai stat bertseka tsitsikli neuro dynam program athena scientif belmont heali moll new extens local search appli dial arid problem european journal oper research psarafti interchang procedur local search precedenceconstrain rout problem european journal oper research zhang dietterich reinforc learn approach job shop schedul proceed fourteenth intern joint confer artifici intellig pp morgan kaufmann san francisco stein asymptot probabilist analysi rout problem math oper re